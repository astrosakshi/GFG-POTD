---------Longest valid Parentheses-----------

c++-------

class Solution {
  public:
    int maxLength(string& str) {
        stack<int> stk;
        stk.push(-1);  // Initialize with -1 to handle base case
        int max_len = 0;
        
        for (int i = 0; i < str.length(); i++) {
            if (str[i] == '(') {
                stk.push(i);
            } else {
                stk.pop();
                if (stk.empty()) {
                    stk.push(i);  // If stack is empty, push current index
                } else {
                    max_len = max(max_len, i - stk.top());
                }
            }
        }
        
        return max_len;
    }
};

====================================
2) python 3 -------

class Solution:
    def maxLength(self, str):
        stack = [-1]
        max_len = 0
        
        for i in range(len(str)):
            if str[i] == '(':
                stack.append(i)
            else:
                stack.pop()
                if not stack:
                    stack.append(i)
                else:
                    max_len = max(max_len, i - stack[-1])
        
        return max_len
====================================
